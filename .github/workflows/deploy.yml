name: Deploy NestJS Application

on:
  push:
    tags:
      - "deploy-*"

defaults:
  run:
    working-directory: ./nest-auth-ms

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Vérifie le code du dépôt
    - name: Checkout code
      uses: actions/checkout@v3

    # Configure Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    # Installe les dépendances
    - name: Install dependencies
      run: npm install

    # Exécute les tests
    - name: Run tests
      run: npm run test

    # Déploie sur le VPS
    - name: Deploy to VPS
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
        VPS_USER: ${{ secrets.VPS_USER }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ls
        scp -i private_key.pem -o StrictHostKeyChecking=no Dockerfile $VPS_USER@$VPS_HOST:~/auth-ms
        scp -i private_key.pem -o StrictHostKeyChecking=no package*.json $VPS_USER@$VPS_HOST:~/auth-ms
        scp -i private_key.pem -o StrictHostKeyChecking=no -r src/ $VPS_USER@$VPS_HOST:~/auth-ms
        scp -i private_key.pem -o StrictHostKeyChecking=no tsconfig*.json $VPS_USER@$VPS_HOST:~/auth-ms
        scp -i private_key.pem -o StrictHostKeyChecking=no docker-compose.yml $VPS_USER@$VPS_HOST:~/auth-ms

        # Se connecter et reconstruire l'image Docker
        ssh -i private_key.pem -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'EOF'
          cd ~/auth-ms

          # Construire l'image Docker
          docker build -t nest-auth-ms:latest .

          docker compose down
          docker compose up -d

        EOF
        rm -f private_key.pem

